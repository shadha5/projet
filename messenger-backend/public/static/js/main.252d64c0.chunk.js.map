{"version":3,"sources":["reducers/appReducers.js","reducers/functions/index.functions.js","reducers/routReducers.js","reportWebVitals.js","App.js","index.js","localStorage.js","actions/index.functions.js","actions/basic.function.js"],"names":["_","require","pushMessage","conversations","message","newConversations","forEach","conversation","i","_id","push","newConversation","messages","unionBy","sortBy","reverse","createConversation","updateConversation","createContact","contacts","newContact","newContacts","updateContact","contact","AppReducers","state","person","image","username","first_name","last_name","brightness","isLoggedIn","action","type","payload","snackbars","isError","errors","error","id","uuid","variant","errorMessage","date","Date","now","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Pages","lazy","Theme","connect","dispatch","verifySession","getConversations","getContacts","setContacts","setConversations","React","useEffect","setTimeout","a","socket","socketIOClient","SOCKET_URL","withCredentials","on","data","fallback","Backdrop","sx","background","open","Typography","cursor","fontSize","color","component","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","configureStore","createStore","rootReducer","compose","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","store","document","getElementById","BACKEND_URL","applyRequiredActions","requiredAction","signUp","fetch","method","headers","Accept","credentials","body","response","json","result","success","signIn","signOut","updateAccount","getPersonById","personId","sendMessage","searchPersons","setBrightness"],"mappings":"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","file":"static/js/main.252d64c0.chunk.js","sourcesContent":["import uuid from \"react-uuid\";\n\n//  LOAD STATE\nimport { loadState } from \"./functions/index.functions\";\n\n//    LODASH\nconst _ = require(\"lodash\");\n\n//  FUNCTIONS\nconst pushMessage = (conversations, message) => {\n  const newConversations = [];\n  conversations.forEach((conversation, i) => {\n    if (conversation._id !== message.conversation) {\n      newConversations.push(conversation);\n    } else {\n      const newConversation = conversation;\n      newConversation.messages.push(message);\n      newConversation.messages = _.unionBy(newConversation.messages, \"_id\");\n      newConversations.push(newConversation);\n    }\n  });\n  return _.sortBy(_.unionBy(newConversations, \"_id\"), [\"updated\"]).reverse();\n};\n\nconst createConversation = (conversations, newConversation) => {\n  const newConversations = conversations;\n  newConversations.push(newConversation);\n  return _.sortBy(_.unionBy(newConversations, \"_id\"), [\"updated\"]).reverse();\n};\n\nconst updateConversation = (conversations, newConversation) => {\n  const newConversations = [];\n  conversations.forEach((conversation, i) => {\n    if (conversation._id !== newConversation._id) {\n      newConversations.push(conversation);\n    } else {\n      newConversations.push(newConversation);\n    }\n  });\n  return _.sortBy(_.unionBy(newConversations, \"_id\"), [\"updated\"]).reverse();\n};\n\nconst createContact = (contacts, newContact) => {\n  const newContacts = contacts;\n  newContacts.push(newContact);\n  return _.unionBy(newContacts, \"_id\");\n};\n\nconst updateContact = (contacts, newContact) => {\n  const newContacts = [];\n  contacts.forEach((contact, i) => {\n    if (contact._id !== newContact._id) {\n      newContacts.push(contact);\n    } else {\n      newContacts.push(newContact);\n    }\n  });\n  return _.unionBy(newContacts, \"_id\");\n};\n\nconst AppReducers = (state = loadState(), action) => {\n  switch (action.type) {\n    case \"CONTACT_UPDATED\":\n      return {\n        ...state,\n        contacts: updateContact(state.contacts, action.payload),\n      };\n    case \"CONTACT_CREATED\":\n      return {\n        ...state,\n        contacts: createContact(state.contacts, action.payload),\n      };\n    case \"CONVERSATION_CREATED\":\n      return {\n        ...state,\n        conversations: createConversation(state.conversations, action.payload),\n      };\n    case \"CONVERSATION_UPDATED\":\n      return {\n        ...state,\n        conversations: updateConversation(state.conversations, action.payload),\n      };\n    case \"PUSH_MESSAGE\":\n      return {\n        ...state,\n        conversations: pushMessage(state.conversations, action.payload),\n      };\n    case \"SET_CONVERSATIONS\":\n      return {\n        ...state,\n        conversations: _.sortBy(_.unionBy(action.payload, \"_id\"), [\n          \"updated\",\n        ]).reverse(),\n      };\n    case \"SET_CONTACTS\":\n      return {\n        ...state,\n        contacts: _.unionBy(action.payload, \"_id\"),\n      };\n    case \"SET_PERSON\":\n      return {\n        ...state,\n        person: {\n          _id: action.payload._id,\n          image: action.payload.image,\n          first_name: action.payload.first_name,\n          last_name: action.payload.last_name,\n        },\n      };\n    case \"SET_SNACKBAR\":\n      const snackbars = [];\n      if (action.payload.isError) {\n        action.payload.errors.forEach((error) => {\n          snackbars.push({\n            id: uuid(),\n            variant: \"error\",\n            message: error.errorMessage,\n            date: Date.now(),\n          });\n        });\n      } else {\n        snackbars.push({\n          id: uuid(),\n          variant: \"success\",\n          message: action.payload.message,\n          date: Date.now(),\n        });\n      }\n      return { ...state, snackbars };\n    case \"CASE_RESET\":\n      return { ...loadState(), brightness: state.brightness };\n    case \"SET_BRIGHTNESS\":\n      return { ...state, brightness: action.payload };\n    case \"SET_ISLOGGEDIN\":\n      return { ...state, isLoggedIn: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default AppReducers;\n","/***********************/\n/**** LOCAL STORAGE ****/\n/***********************/\n\nexport const loadState = () => {\n  return {\n    person: {\n      _id: null,\n      image: null,\n      username: null,\n      first_name: null,\n      last_name: null,\n    },\n    contacts: [],\n    conversations: [],\n    brightness: \"light\",\n    isLoggedIn: false,\n  };\n};\n","import { combineReducers } from 'redux';\nimport AppReducers from './appReducers';\n\nexport default combineReducers({\n    AppReducers,\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense, lazy } from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Typography from \"@mui/material/Typography\";\nimport { connect } from \"react-redux\";\nimport socketIOClient from \"socket.io-client\";\n\n//  IMPORT VARS AND FUNCTIONS\nimport { SOCKET_URL } from \"./actions/index.functions\";\n\n//  ACTIONS\nimport {\n  verifySession,\n  getConversations,\n  getContacts,\n  pushMessage,\n  createContact,\n  updateContact,\n  createConversation,\n  updateConversation,\n  setContacts,\n  setConversations,\n} from \"./actions/basic.function\";\n\n//  COMPONENTS\nconst Pages = lazy(() => import(\"./pages/index.page\"));\nconst Theme = lazy(() => import(\"./main.theme.js\"));\n\n//  RENER\nconst App = ({\n  pushMessage,\n  brightness,\n  isLoggedIn,\n  verifySession,\n  getConversations,\n  createConversation,\n  updateConversation,\n  createContact,\n  updateContact,\n  getContacts,\n  setContacts,\n  setConversations,\n}) => {\n  React.useEffect(() => {\n    setTimeout(async () => {\n      await getConversations();\n      await getContacts();\n      await verifySession();\n      //  SOCKET END POINT\n      const socket = socketIOClient(SOCKET_URL, {\n        withCredentials: true,\n      });\n      socket.on(\"setContacts\", (data) => {\n        setContacts(data);\n      });\n\n      socket.on(\"setConversations\", (data) => {\n        setConversations(data);\n      });\n\n      socket.on(\"messageCreated\", (data) => {\n        pushMessage(data);\n      });\n      socket.on(\"conversationCreated\", (data) => {\n        createConversation(data);\n      });\n      socket.on(\"conversationUpdated\", (data) => {\n        updateConversation(data);\n      });\n      socket.on(\"contactCreated\", (data) => {\n        createContact(data);\n      });\n      socket.on(\"contactUpdated\", (data) => {\n        updateContact(data);\n      });\n    }, 0);\n  });\n\n  return (\n    <Suspense\n      fallback={\n        <Backdrop\n          sx={{\n            background: brightness === \"light\" ? \"#fff\" : \"#121212\",\n          }}\n          open\n        >\n          <Typography\n            sx={{\n              cursor: \"pointer\",\n              fontSize: \"100px\",\n              color: \"#3b5998\",\n            }}\n            component=\"span\"\n          >\n            ש\n          </Typography>\n        </Backdrop>\n      }\n    >\n      <Theme brightness={brightness}>\n        <Pages />\n      </Theme>\n    </Suspense>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  verifySession: () => dispatch(verifySession()),\n  getConversations: () => dispatch(getConversations()),\n  getContacts: () => dispatch(getContacts()),\n  pushMessage: (message) => dispatch(pushMessage(message)),\n  createConversation: (conversation) =>\n    dispatch(createConversation(conversation)),\n  updateConversation: (conversation) =>\n    dispatch(updateConversation(conversation)),\n  createContact: (contact) => dispatch(createContact(contact)),\n  updateContact: (contact) => dispatch(updateContact(contact)),\n  setContacts: (contacts) => dispatch(setContacts(contacts)),\n  setConversations: (conversations) =>\n    dispatch(setConversations(conversations)),\n});\n\nconst mapStateToProps = ({ AppReducers }) => {\n  return {\n    brightness: AppReducers.brightness,\n    isLoggedIn: AppReducers.isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport rootReducer from \"./reducers/routReducers\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { loadState, saveState } from \"./localStorage\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n// LOAD STATE\nconst persistedState = loadState();\n\n// CREATE STORE\nconst configureStore = createStore(\n  rootReducer,\n  persistedState,\n  compose(applyMiddleware(thunk))\n);\n\n// STATE CHANGE LISTENER\nconfigureStore.subscribe(() => {\n  saveState(configureStore.getState());\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const loadState = () => {\n  try {\n    let serializedState = localStorage.getItem(\"shinState\");\n    if (serializedState == null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"shinState\", serializedState);\n  } catch (error) {\n    // IGNORE WRITE ERROR\n  }\n};\n","export const BACKEND_URL = \"https://shin-messenger.herokuapp.com/api/v1\";\nexport const SOCKET_URL = \"https://shin-messenger.herokuapp.com\";\n","//  IMPORT VARS AND FUNCTIONS\nimport { BACKEND_URL } from \"./index.functions\";\n\n//  GLOBAL FUNCTIONS\nexport const applyRequiredActions = (errors, dispatch) => {\n  errors.forEach((error) => {\n    switch (error.requiredAction) {\n      case \"login\":\n        //    ACTION\n        dispatch({\n          type: \"SET_ISLOGGEDIN\",\n          payload: false,\n        });\n        dispatch({\n          type: \"CASE_RESET\",\n        });\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport const signUp = (data) => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/sign-up\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify(data),\n  });\n  const result = await response.json();\n\n  //  ACTIONS\n  if (result.success) {\n    dispatch({\n      type: \"SET_ISLOGGEDIN\",\n      payload: true,\n    });\n    dispatch({\n      type: \"SET_SNACKBAR\",\n      payload: {\n        isError: false,\n        message: result.message,\n      },\n    });\n  } else {\n    //    SEND ERRORS\n    dispatch({\n      type: \"SET_SNACKBAR\",\n      payload: {\n        isError: true,\n        errors: result.errors,\n      },\n    });\n    await applyRequiredActions(result.errors, dispatch);\n  }\n\n  //  RETURN RESULT\n  return result.success;\n};\n\nexport const signIn = (data) => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/sign-in\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify(data),\n  });\n  const result = await response.json();\n\n  //  ACTIONS\n  if (result.success) {\n    dispatch({\n      type: \"SET_ISLOGGEDIN\",\n      payload: true,\n    });\n    dispatch({\n      type: \"SET_SNACKBAR\",\n      payload: {\n        isError: false,\n        message: result.message,\n      },\n    });\n  } else {\n    //    SEND ERRORS\n    dispatch({\n      type: \"SET_SNACKBAR\",\n      payload: {\n        isError: true,\n        errors: result.errors,\n      },\n    });\n    await applyRequiredActions(result.errors, dispatch);\n  }\n\n  //  RETURN RESULT\n  return result.success;\n};\n\nexport const signOut = () => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/sign-out\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    credentials: \"include\",\n  });\n  const result = await response.json();\n\n  if (result.success) {\n    dispatch({\n      type: \"CASE_RESET\",\n    });\n    dispatch({\n      type: \"SET_SNACKBAR\",\n      payload: {\n        isError: false,\n        message: result.message,\n      },\n    });\n  } else {\n    //    SEND ERRORS\n    dispatch({\n      type: \"SET_SNACKBAR\",\n      payload: {\n        isError: true,\n        errors: result.errors,\n      },\n    });\n    await applyRequiredActions(result.errors, dispatch);\n  }\n\n  //  RETURN RESULT\n  return result.success;\n};\n\nexport const verifySession = () => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/session\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    credentials: \"include\",\n  });\n  const result = await response.json();\n\n  if (result.success) {\n    dispatch({\n      type: \"SET_PERSON\",\n      payload: result.data,\n    });\n  } else {\n    await applyRequiredActions(result.errors, dispatch);\n  }\n\n  //  RETURN RESULT\n  return result.success;\n};\n\nexport const updateAccount = (data) => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/account\", {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n    credentials: \"include\",\n  });\n  const result = await response.json();\n\n  if (result.success) {\n    dispatch({\n      type: \"SET_PERSON\",\n      payload: result.data,\n    });\n    dispatch({\n      type: \"SET_SNACKBAR\",\n      payload: {\n        isError: false,\n        message: result.message,\n      },\n    });\n  } else {\n    await applyRequiredActions(result.errors, dispatch);\n    //    SEND ERRORS\n    dispatch({\n      type: \"SET_SNACKBAR\",\n      payload: {\n        isError: true,\n        errors: result.errors,\n      },\n    });\n  }\n\n  //  RETURN RESULT\n  return result.success;\n};\n\nexport const getConversations = () => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/conversations\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    credentials: \"include\",\n  });\n  const result = await response.json();\n\n  if (result.success) {\n    return dispatch({\n      type: \"SET_CONVERSATIONS\",\n      payload: result.data,\n    });\n  } else {\n    await applyRequiredActions(result.errors, dispatch);\n  }\n\n  //  RETURN RESULT\n  return result.success;\n};\n\nexport const getContacts = () => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/contacts\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    credentials: \"include\",\n  });\n  const result = await response.json();\n\n  if (result.success) {\n    return dispatch({\n      type: \"SET_CONTACTS\",\n      payload: result.data,\n    });\n  } else {\n    await applyRequiredActions(result.errors, dispatch);\n  }\n\n  //  RETURN RESULT\n  return result.success;\n};\n\nexport const getPersonById = (personId) => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/persons/\" + personId, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    credentials: \"include\",\n  });\n  const result = await response.json();\n\n  if (!result.success) {\n    await applyRequiredActions(result.errors, dispatch);\n  }\n\n  //  RETURN DATA\n  return result;\n};\n\nexport const sendMessage = (data) => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/messages\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n    credentials: \"include\",\n  });\n  const result = await response.json();\n\n  if (result.success) {\n    dispatch({\n      type: \"PUSH_MESSAGE\",\n      payload: result.data,\n    });\n  } else {\n    await applyRequiredActions(result.errors, dispatch);\n  }\n\n  //  RETURN DATA\n  return result;\n};\n\nexport const searchPersons = (data) => async (dispatch) => {\n  const response = await fetch(BACKEND_URL + \"/search\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n    credentials: \"include\",\n  });\n\n  //  RETURN DATA\n  return await response.json();\n};\n\nexport const pushMessage = (data) => async (dispatch) => {\n  return dispatch({\n    type: \"PUSH_MESSAGE\",\n    payload: data,\n  });\n};\n\nexport const createConversation = (data) => async (dispatch) => {\n  return dispatch({\n    type: \"CONVERSATION_CREATED\",\n    payload: data,\n  });\n};\n\nexport const updateConversation = (data) => async (dispatch) => {\n  return dispatch({\n    type: \"CONVERSATION_UPDATED\",\n    payload: data,\n  });\n};\n\nexport const createContact = (data) => async (dispatch) => {\n  return dispatch({\n    type: \"CONTACT_CREATED\",\n    payload: data,\n  });\n};\n\nexport const updateContact = (data) => async (dispatch) => {\n  return dispatch({\n    type: \"CONTACT_UPDATED\",\n    payload: data,\n  });\n};\n\nexport const setContacts = (data) => async (dispatch) => {\n  return dispatch({\n    type: \"SET_CONTACTS\",\n    payload: data,\n  });\n};\n\nexport const setConversations = (data) => async (dispatch) => {\n  return dispatch({\n    type: \"SET_CONVERSATIONS\",\n    payload: data,\n  });\n};\n\n//  SETBRIGHTNESS\nexport const setBrightness = (brightness) => async (dispatch) => {\n  return dispatch({\n    type: \"SET_BRIGHTNESS\",\n    payload: brightness,\n  });\n};\n"],"sourceRoot":""}